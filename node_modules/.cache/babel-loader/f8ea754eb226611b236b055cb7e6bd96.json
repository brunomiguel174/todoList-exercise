{"ast":null,"code":"var _jsxFileName = \"/Users/brunoreis/Desktop/React/ReactExercicioToDoGoncalo/todo-list/src/Components/Main.jsx\";\nimport React, { Component } from 'react';\n\nclass Main extends Component {\n  constructor() {\n    super();\n    this.state = {\n      someInput: '',\n      list: []\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        someInput: event.target.value\n      });\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  render() {\n    const {\n      someInput,\n      list\n    } = this.state;\n    const error = validatePassword(someInput);\n    return React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"You typed: \", someInput.length, \" chars\"), React.createElement(\"input\", {\n      name: \"some-input\",\n      className: \"my-input\",\n      value: someInput,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }), error && React.createElement(\"span\", {\n      style: {\n        color: 'red'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, error), React.createElement(\"button\", {\n      disabled: error !== null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"Submit\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, list.map(value => React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, value))));\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.setState(state => ({\n      someInput: '',\n      list: state.list.concat([state.someInput])\n    }));\n  }\n\n}\n\nfunction validatePassword(password) {\n  if (password.length < 4) {\n    return 'Password must be at least 4 chars';\n  }\n\n  if (!/\\d/.test(password)) {\n    return 'Password must have at least a digit';\n  }\n\n  if (!/[a-z]/.test(password)) {\n    return 'Password must have a lower case letter';\n  }\n\n  if (!/[A-Z]/.test(password)) {\n    return 'Password must have an upper case letter';\n  }\n\n  return null;\n}\n\nexport default Main;","map":{"version":3,"sources":["/Users/brunoreis/Desktop/React/ReactExercicioToDoGoncalo/todo-list/src/Components/Main.jsx"],"names":["React","Component","Main","constructor","state","someInput","list","handleChange","event","setState","target","value","handleSubmit","bind","render","error","validatePassword","length","color","map","preventDefault","concat","password","test"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,IAAN,SAAmBD,SAAnB,CAA6B;AACzBE,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,SAAS,EAAE,EAAb;AAAiBC,MAAAA,IAAI,EAAE;AAAvB,KAAb;;AAEA,SAAKC,YAAL,GAAoBC,KAAK,IAAI;AACzB,WAAKC,QAAL,CAAc;AAAEJ,QAAAA,SAAS,EAAEG,KAAK,CAACE,MAAN,CAAaC;AAA1B,OAAd;AACH,KAFD;;AAIA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAET,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAAsB,KAAKF,KAAjC;AAEA,UAAMW,KAAK,GAAGC,gBAAgB,CAACX,SAAD,CAA9B;AAEA,WACI;AAAM,MAAA,QAAQ,EAAE,KAAKO,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAiBP,SAAS,CAACY,MAA3B,WADJ,EAEI;AACI,MAAA,IAAI,EAAC,YADT;AAEI,MAAA,SAAS,EAAC,UAFd;AAGI,MAAA,KAAK,EAAEZ,SAHX;AAII,MAAA,QAAQ,EAAE,KAAKE,YAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAQKQ,KAAK,IAAI;AAAM,MAAA,KAAK,EAAE;AAAEG,QAAAA,KAAK,EAAE;AAAT,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgCH,KAAhC,CARd,EASI;AAAQ,MAAA,QAAQ,EAAEA,KAAK,KAAK,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATJ,EAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKT,IAAI,CAACa,GAAL,CAASR,KAAK,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,KAAL,CAAlB,CADL,CAVJ,CADJ;AAgBH;;AAEDC,EAAAA,YAAY,CAACJ,KAAD,EAAQ;AAChBA,IAAAA,KAAK,CAACY,cAAN;AACA,SAAKX,QAAL,CAAcL,KAAK,KAAK;AAAEC,MAAAA,SAAS,EAAE,EAAb;AAAiBC,MAAAA,IAAI,EAAEF,KAAK,CAACE,IAAN,CAAWe,MAAX,CAAkB,CAACjB,KAAK,CAACC,SAAP,CAAlB;AAAvB,KAAL,CAAnB;AACH;;AAtCwB;;AAyC7B,SAASW,gBAAT,CAA0BM,QAA1B,EAAoC;AAChC,MAAIA,QAAQ,CAACL,MAAT,GAAkB,CAAtB,EAAyB;AACrB,WAAO,mCAAP;AACH;;AAED,MAAI,CAAC,KAAKM,IAAL,CAAUD,QAAV,CAAL,EAA0B;AACtB,WAAO,qCAAP;AACH;;AAED,MAAI,CAAC,QAAQC,IAAR,CAAaD,QAAb,CAAL,EAA6B;AACzB,WAAO,wCAAP;AACH;;AAED,MAAI,CAAC,QAAQC,IAAR,CAAaD,QAAb,CAAL,EAA6B;AACzB,WAAO,yCAAP;AACH;;AAED,SAAO,IAAP;AACH;;AAGD,eAAepB,IAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass Main extends Component {\n    constructor() {\n        super();\n        this.state = { someInput: '', list: [] };\n\n        this.handleChange = event => {\n            this.setState({ someInput: event.target.value });\n        };\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    render() {\n        const { someInput, list } = this.state;\n\n        const error = validatePassword(someInput);\n\n        return (\n            <form onSubmit={this.handleSubmit}>\n                <div>You typed: {someInput.length} chars</div>\n                <input\n                    name=\"some-input\"\n                    className=\"my-input\"\n                    value={someInput}\n                    onChange={this.handleChange}\n                />\n                {error && <span style={{ color: 'red' }}>{error}</span>}\n                <button disabled={error !== null}>Submit</button>\n                <ul>\n                    {list.map(value => <li>{value}</li>)}\n                </ul>\n            </form>\n        );\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        this.setState(state => ({ someInput: '', list: state.list.concat([state.someInput]) }));\n    }\n}\n\nfunction validatePassword(password) {\n    if (password.length < 4) {\n        return 'Password must be at least 4 chars';\n    }\n\n    if (!/\\d/.test(password)) {\n        return 'Password must have at least a digit';\n    }\n\n    if (!/[a-z]/.test(password)) {\n        return 'Password must have a lower case letter';\n    }\n\n    if (!/[A-Z]/.test(password)) {\n        return 'Password must have an upper case letter';\n    }\n\n    return null;\n}\n\n\nexport default Main;"]},"metadata":{},"sourceType":"module"}